import pandas as pd
import numpy as np
import datetime as dt
import xlrd
import requests
## GEO API ###

# long_list = [153.044438, 153.042078, 153.052707]
#
# lat_list = [-27.630777, -27.642221, -27.604297]
#
# url = "https://geocode.xyz/"
# url2 = "?geoit=json"
#
# for n in range(len(long_list)):
#     start = dt.datetime.now()
#     long = long_list[n]
#     lat = lat_list[n]
#     long_lat = str(lat) + "," + str(long)
#
#     url_full = url + long_lat + url2
#     response = requests.get(url_full)
#
#     json = response.json()
#     json2 = json["alt"]
#     print(url_full + " completed in " + str(dt.datetime.now() - start))
#     print(json)


### DOG BREEDS API ###

# url = 'https://dog.ceo/api/breeds/list/all'
#
# response  = requests.get(url)
#
# data = response.json()
#
# dogs = data["message"]
#
# print(dogs)
#
# for key in dogs.keys():
#
#     print("\nDog: " + key)
#
#     for breed in dogs[key]:
#         print("->" + breed)

### EURO FX API ###

last_years_euro_fx = {}

date_list_2017 = ['2017-01-01'
,'2017-01-02'
,'2017-01-03'
,'2017-01-04'
,'2017-01-05'
,'2017-01-06'
,'2017-01-07'
,'2017-01-08'
,'2017-01-09'
,'2017-01-10'
,'2017-01-11'
,'2017-01-12'
,'2017-01-13'
,'2017-01-14'
,'2017-01-15'
,'2017-01-16'
,'2017-01-17'
,'2017-01-18'
,'2017-01-19'
,'2017-01-20'
,'2017-01-21'
,'2017-01-22'
,'2017-01-23'
,'2017-01-24'
,'2017-01-25'
,'2017-01-26'
,'2017-01-27'
,'2017-01-28'
,'2017-01-29'
,'2017-01-30'
,'2017-01-31'
,'2017-02-01'
,'2017-02-02'
,'2017-02-03'
,'2017-02-04'
,'2017-02-05'
,'2017-02-06'
,'2017-02-07'
,'2017-02-08'
,'2017-02-09'
,'2017-02-10'
,'2017-02-11'
,'2017-02-12'
,'2017-02-13'
,'2017-02-14'
,'2017-02-15'
,'2017-02-16'
,'2017-02-17'
,'2017-02-18'
,'2017-02-19'
,'2017-02-20'
,'2017-02-21'
,'2017-02-22'
,'2017-02-23'
,'2017-02-24'
,'2017-02-25'
,'2017-02-26'
,'2017-02-27'
,'2017-02-28'
,'2017-03-01'
,'2017-03-02'
,'2017-03-03'
,'2017-03-04'
,'2017-03-05'
,'2017-03-06'
,'2017-03-07'
,'2017-03-08'
,'2017-03-09'
,'2017-03-10'
,'2017-03-11'
,'2017-03-12'
,'2017-03-13'
,'2017-03-14'
,'2017-03-15'
,'2017-03-16'
,'2017-03-17'
,'2017-03-18'
,'2017-03-19'
,'2017-03-20'
,'2017-03-21'
,'2017-03-22'
,'2017-03-23'
,'2017-03-24'
,'2017-03-25'
,'2017-03-26'
,'2017-03-27'
,'2017-03-28'
,'2017-03-29'
,'2017-03-30'
,'2017-03-31'
,'2017-04-01'
,'2017-04-02'
,'2017-04-03'
,'2017-04-04'
,'2017-04-05'
,'2017-04-06'
,'2017-04-07'
,'2017-04-08'
,'2017-04-09'
,'2017-04-10'
,'2017-04-11'
,'2017-04-12'
,'2017-04-13'
,'2017-04-14'
,'2017-04-15'
,'2017-04-16'
,'2017-04-17'
,'2017-04-18'
,'2017-04-19'
,'2017-04-20'
,'2017-04-21'
,'2017-04-22'
,'2017-04-23'
,'2017-04-24'
,'2017-04-25'
,'2017-04-26'
,'2017-04-27'
,'2017-04-28'
,'2017-04-29'
,'2017-04-30'
,'2017-05-01'
,'2017-05-02'
,'2017-05-03'
,'2017-05-04'
,'2017-05-05'
,'2017-05-06'
,'2017-05-07'
,'2017-05-08'
,'2017-05-09'
,'2017-05-10'
,'2017-05-11'
,'2017-05-12'
,'2017-05-13'
,'2017-05-14'
,'2017-05-15'
,'2017-05-16'
,'2017-05-17'
,'2017-05-18'
,'2017-05-19'
,'2017-05-20'
,'2017-05-21'
,'2017-05-22'
,'2017-05-23'
,'2017-05-24'
,'2017-05-25'
,'2017-05-26'
,'2017-05-27'
,'2017-05-28'
,'2017-05-29'
,'2017-05-30'
,'2017-05-31'
,'2017-06-01'
,'2017-06-02'
,'2017-06-03'
,'2017-06-04'
,'2017-06-05'
,'2017-06-06'
,'2017-06-07'
,'2017-06-08'
,'2017-06-09'
,'2017-06-10'
,'2017-06-11'
,'2017-06-12'
,'2017-06-13'
,'2017-06-14'
,'2017-06-15'
,'2017-06-16'
,'2017-06-17'
,'2017-06-18'
,'2017-06-19'
,'2017-06-20'
,'2017-06-21'
,'2017-06-22'
,'2017-06-23'
,'2017-06-24'
,'2017-06-25'
,'2017-06-26'
,'2017-06-27'
,'2017-06-28'
,'2017-06-29'
,'2017-06-30'
,'2017-07-01'
,'2017-07-02'
,'2017-07-03'
,'2017-07-04'
,'2017-07-05'
,'2017-07-06'
,'2017-07-07'
,'2017-07-08'
,'2017-07-09'
,'2017-07-10'
,'2017-07-11'
,'2017-07-12'
,'2017-07-13'
,'2017-07-14'
,'2017-07-15'
,'2017-07-16'
,'2017-07-17'
,'2017-07-18'
,'2017-07-19'
,'2017-07-20'
,'2017-07-21'
,'2017-07-22'
,'2017-07-23'
,'2017-07-24'
,'2017-07-25'
,'2017-07-26'
,'2017-07-27'
,'2017-07-28'
,'2017-07-29'
,'2017-07-30'
,'2017-07-31'
,'2017-08-01'
,'2017-08-02'
,'2017-08-03'
,'2017-08-04'
,'2017-08-05'
,'2017-08-06'
,'2017-08-07'
,'2017-08-08'
,'2017-08-09'
,'2017-08-10'
,'2017-08-11'
,'2017-08-12'
,'2017-08-13'
,'2017-08-14'
,'2017-08-15'
,'2017-08-16'
,'2017-08-17'
,'2017-08-18'
,'2017-08-19'
,'2017-08-20'
,'2017-08-21'
,'2017-08-22'
,'2017-08-23'
,'2017-08-24'
,'2017-08-25'
,'2017-08-26'
,'2017-08-27'
,'2017-08-28'
,'2017-08-29'
,'2017-08-30'
,'2017-08-31'
,'2017-09-01'
,'2017-09-02'
,'2017-09-03'
,'2017-09-04'
,'2017-09-05'
,'2017-09-06'
,'2017-09-07'
,'2017-09-08'
,'2017-09-09'
,'2017-09-10'
,'2017-09-11'
,'2017-09-12'
,'2017-09-13'
,'2017-09-14'
,'2017-09-15'
,'2017-09-16'
,'2017-09-17'
,'2017-09-18'
,'2017-09-19'
,'2017-09-20'
,'2017-09-21'
,'2017-09-22'
,'2017-09-23'
,'2017-09-24'
,'2017-09-25'
,'2017-09-26'
,'2017-09-27'
,'2017-09-28'
,'2017-09-29'
,'2017-09-30'
,'2017-10-01'
,'2017-10-02'
,'2017-10-03'
,'2017-10-04'
,'2017-10-05'
,'2017-10-06'
,'2017-10-07'
,'2017-10-08'
,'2017-10-09'
,'2017-10-10'
,'2017-10-11'
,'2017-10-12'
,'2017-10-13'
,'2017-10-14'
,'2017-10-15'
,'2017-10-16'
,'2017-10-17'
,'2017-10-18'
,'2017-10-19'
,'2017-10-20'
,'2017-10-21'
,'2017-10-22'
,'2017-10-23'
,'2017-10-24'
,'2017-10-25'
,'2017-10-26'
,'2017-10-27'
,'2017-10-28'
,'2017-10-29'
,'2017-10-30'
,'2017-10-31'
,'2017-11-01'
,'2017-11-02'
,'2017-11-03'
,'2017-11-04'
,'2017-11-05'
,'2017-11-06'
,'2017-11-07'
,'2017-11-08'
,'2017-11-09'
,'2017-11-10'
,'2017-11-11'
,'2017-11-12'
,'2017-11-13'
,'2017-11-14'
,'2017-11-15'
,'2017-11-16'
,'2017-11-17'
,'2017-11-18'
,'2017-11-19'
,'2017-11-20'
,'2017-11-21'
,'2017-11-22'
,'2017-11-23'
,'2017-11-24'
,'2017-11-25'
,'2017-11-26'
,'2017-11-27'
,'2017-11-28'
,'2017-11-29'
,'2017-11-30'
,'2017-12-01'
,'2017-12-02'
,'2017-12-03'
,'2017-12-04'
,'2017-12-05'
,'2017-12-06'
,'2017-12-07'
,'2017-12-08'
,'2017-12-09'
,'2017-12-10'
,'2017-12-11'
,'2017-12-12'
,'2017-12-13'
,'2017-12-14'
,'2017-12-15'
,'2017-12-16'
,'2017-12-17'
,'2017-12-18'
,'2017-12-19'
,'2017-12-20'
,'2017-12-21'
,'2017-12-22'
,'2017-12-23'
,'2017-12-24'
,'2017-12-25'
,'2017-12-26'
,'2017-12-27'
,'2017-12-28'
,'2017-12-29'
,'2017-12-30'
,'2017-12-31']

date_list_2016 = ['2016-01-01'
,'2016-01-02'
,'2016-01-03'
,'2016-01-04'
,'2016-01-05'
,'2016-01-06'
,'2016-01-07'
,'2016-01-08'
,'2016-01-09'
,'2016-01-10'
,'2016-01-11'
,'2016-01-12'
,'2016-01-13'
,'2016-01-14'
,'2016-01-15'
,'2016-01-16'
,'2016-01-17'
,'2016-01-18'
,'2016-01-19'
,'2016-01-20'
,'2016-01-21'
,'2016-01-22'
,'2016-01-23'
,'2016-01-24'
,'2016-01-25'
,'2016-01-26'
,'2016-01-27'
,'2016-01-28'
,'2016-01-29'
,'2016-01-30'
,'2016-01-31'
,'2016-02-01'
,'2016-02-02'
,'2016-02-03'
,'2016-02-04'
,'2016-02-05'
,'2016-02-06'
,'2016-02-07'
,'2016-02-08'
,'2016-02-09'
,'2016-02-10'
,'2016-02-11'
,'2016-02-12'
,'2016-02-13'
,'2016-02-14'
,'2016-02-15'
,'2016-02-16'
,'2016-02-17'
,'2016-02-18'
,'2016-02-19'
,'2016-02-20'
,'2016-02-21'
,'2016-02-22'
,'2016-02-23'
,'2016-02-24'
,'2016-02-25'
,'2016-02-26'
,'2016-02-27'
,'2016-02-28'
,'2016-03-01'
,'2016-03-02'
,'2016-03-03'
,'2016-03-04'
,'2016-03-05'
,'2016-03-06'
,'2016-03-07'
,'2016-03-08'
,'2016-03-09'
,'2016-03-10'
,'2016-03-11'
,'2016-03-12'
,'2016-03-13'
,'2016-03-14'
,'2016-03-15'
,'2016-03-16'
,'2016-03-17'
,'2016-03-18'
,'2016-03-19'
,'2016-03-20'
,'2016-03-21'
,'2016-03-22'
,'2016-03-23'
,'2016-03-24'
,'2016-03-25'
,'2016-03-26'
,'2016-03-27'
,'2016-03-28'
,'2016-03-29'
,'2016-03-30'
,'2016-03-31'
,'2016-04-01'
,'2016-04-02'
,'2016-04-03'
,'2016-04-04'
,'2016-04-05'
,'2016-04-06'
,'2016-04-07'
,'2016-04-08'
,'2016-04-09'
,'2016-04-10'
,'2016-04-11'
,'2016-04-12'
,'2016-04-13'
,'2016-04-14'
,'2016-04-15'
,'2016-04-16'
,'2016-04-17'
,'2016-04-18'
,'2016-04-19'
,'2016-04-20'
,'2016-04-21'
,'2016-04-22'
,'2016-04-23'
,'2016-04-24'
,'2016-04-25'
,'2016-04-26'
,'2016-04-27'
,'2016-04-28'
,'2016-04-29'
,'2016-04-30'
,'2016-05-01'
,'2016-05-02'
,'2016-05-03'
,'2016-05-04'
,'2016-05-05'
,'2016-05-06'
,'2016-05-07'
,'2016-05-08'
,'2016-05-09'
,'2016-05-10'
,'2016-05-11'
,'2016-05-12'
,'2016-05-13'
,'2016-05-14'
,'2016-05-15'
,'2016-05-16'
,'2016-05-17'
,'2016-05-18'
,'2016-05-19'
,'2016-05-20'
,'2016-05-21'
,'2016-05-22'
,'2016-05-23'
,'2016-05-24'
,'2016-05-25'
,'2016-05-26'
,'2016-05-27'
,'2016-05-28'
,'2016-05-29'
,'2016-05-30'
,'2016-05-31'
,'2016-06-01'
,'2016-06-02'
,'2016-06-03'
,'2016-06-04'
,'2016-06-05'
,'2016-06-06'
,'2016-06-07'
,'2016-06-08'
,'2016-06-09'
,'2016-06-10'
,'2016-06-11'
,'2016-06-12'
,'2016-06-13'
,'2016-06-14'
,'2016-06-15'
,'2016-06-16'
,'2016-06-17'
,'2016-06-18'
,'2016-06-19'
,'2016-06-20'
,'2016-06-21'
,'2016-06-22'
,'2016-06-23'
,'2016-06-24'
,'2016-06-25'
,'2016-06-26'
,'2016-06-27'
,'2016-06-28'
,'2016-06-29'
,'2016-06-30'
,'2016-07-01'
,'2016-07-02'
,'2016-07-03'
,'2016-07-04'
,'2016-07-05'
,'2016-07-06'
,'2016-07-07'
,'2016-07-08'
,'2016-07-09'
,'2016-07-10'
,'2016-07-11'
,'2016-07-12'
,'2016-07-13'
,'2016-07-14'
,'2016-07-15'
,'2016-07-16'
,'2016-07-17'
,'2016-07-18'
,'2016-07-19'
,'2016-07-20'
,'2016-07-21'
,'2016-07-22'
,'2016-07-23'
,'2016-07-24'
,'2016-07-25'
,'2016-07-26'
,'2016-07-27'
,'2016-07-28'
,'2016-07-29'
,'2016-07-30'
,'2016-07-31'
,'2016-08-01'
,'2016-08-02'
,'2016-08-03'
,'2016-08-04'
,'2016-08-05'
,'2016-08-06'
,'2016-08-07'
,'2016-08-08'
,'2016-08-09'
,'2016-08-10'
,'2016-08-11'
,'2016-08-12'
,'2016-08-13'
,'2016-08-14'
,'2016-08-15'
,'2016-08-16'
,'2016-08-17'
,'2016-08-18'
,'2016-08-19'
,'2016-08-20'
,'2016-08-21'
,'2016-08-22'
,'2016-08-23'
,'2016-08-24'
,'2016-08-25'
,'2016-08-26'
,'2016-08-27'
,'2016-08-28'
,'2016-08-29'
,'2016-08-30'
,'2016-08-31'
,'2016-09-01'
,'2016-09-02'
,'2016-09-03'
,'2016-09-04'
,'2016-09-05'
,'2016-09-06'
,'2016-09-07'
,'2016-09-08'
,'2016-09-09'
,'2016-09-10'
,'2016-09-11'
,'2016-09-12'
,'2016-09-13'
,'2016-09-14'
,'2016-09-15'
,'2016-09-16'
,'2016-09-17'
,'2016-09-18'
,'2016-09-19'
,'2016-09-20'
,'2016-09-21'
,'2016-09-22'
,'2016-09-23'
,'2016-09-24'
,'2016-09-25'
,'2016-09-26'
,'2016-09-27'
,'2016-09-28'
,'2016-09-29'
,'2016-09-30'
,'2016-10-01'
,'2016-10-02'
,'2016-10-03'
,'2016-10-04'
,'2016-10-05'
,'2016-10-06'
,'2016-10-07'
,'2016-10-08'
,'2016-10-09'
,'2016-10-10'
,'2016-10-11'
,'2016-10-12'
,'2016-10-13'
,'2016-10-14'
,'2016-10-15'
,'2016-10-16'
,'2016-10-17'
,'2016-10-18'
,'2016-10-19'
,'2016-10-20'
,'2016-10-21'
,'2016-10-22'
,'2016-10-23'
,'2016-10-24'
,'2016-10-25'
,'2016-10-26'
,'2016-10-27'
,'2016-10-28'
,'2016-10-29'
,'2016-10-30'
,'2016-10-31'
,'2016-11-01'
,'2016-11-02'
,'2016-11-03'
,'2016-11-04'
,'2016-11-05'
,'2016-11-06'
,'2016-11-07'
,'2016-11-08'
,'2016-11-09'
,'2016-11-10'
,'2016-11-11'
,'2016-11-12'
,'2016-11-13'
,'2016-11-14'
,'2016-11-15'
,'2016-11-16'
,'2016-11-17'
,'2016-11-18'
,'2016-11-19'
,'2016-11-20'
,'2016-11-21'
,'2016-11-22'
,'2016-11-23'
,'2016-11-24'
,'2016-11-25'
,'2016-11-26'
,'2016-11-27'
,'2016-11-28'
,'2016-11-29'
,'2016-11-30'
,'2016-12-01'
,'2016-12-02'
,'2016-12-03'
,'2016-12-04'
,'2016-12-05'
,'2016-12-06'
,'2016-12-07'
,'2016-12-08'
,'2016-12-09'
,'2016-12-10'
,'2016-12-11'
,'2016-12-12'
,'2016-12-13'
,'2016-12-14'
,'2016-12-15'
,'2016-12-16'
,'2016-12-17'
,'2016-12-18'
,'2016-12-19'
,'2016-12-20'
,'2016-12-21'
,'2016-12-22'
,'2016-12-23'
,'2016-12-24'
,'2016-12-25'
,'2016-12-26'
,'2016-12-27'
,'2016-12-28'
,'2016-12-29'
,'2016-12-30'
,'2016-12-31']

date_list_2015 = ['2015-01-01'
,'2015-01-02'
,'2015-01-03'
,'2015-01-04'
,'2015-01-05'
,'2015-01-06'
,'2015-01-07'
,'2015-01-08'
,'2015-01-09'
,'2015-01-10'
,'2015-01-11'
,'2015-01-12'
,'2015-01-13'
,'2015-01-14'
,'2015-01-15'
,'2015-01-16'
,'2015-01-17'
,'2015-01-18'
,'2015-01-19'
,'2015-01-20'
,'2015-01-21'
,'2015-01-22'
,'2015-01-23'
,'2015-01-24'
,'2015-01-25'
,'2015-01-26'
,'2015-01-27'
,'2015-01-28'
,'2015-01-29'
,'2015-01-30'
,'2015-01-31'
,'2015-02-01'
,'2015-02-02'
,'2015-02-03'
,'2015-02-04'
,'2015-02-05'
,'2015-02-06'
,'2015-02-07'
,'2015-02-08'
,'2015-02-09'
,'2015-02-10'
,'2015-02-11'
,'2015-02-12'
,'2015-02-13'
,'2015-02-14'
,'2015-02-15'
,'2015-02-16'
,'2015-02-17'
,'2015-02-18'
,'2015-02-19'
,'2015-02-20'
,'2015-02-21'
,'2015-02-22'
,'2015-02-23'
,'2015-02-24'
,'2015-02-25'
,'2015-02-26'
,'2015-02-27'
,'2015-02-28'
,'2015-03-01'
,'2015-03-02'
,'2015-03-03'
,'2015-03-04'
,'2015-03-05'
,'2015-03-06'
,'2015-03-07'
,'2015-03-08'
,'2015-03-09'
,'2015-03-10'
,'2015-03-11'
,'2015-03-12'
,'2015-03-13'
,'2015-03-14'
,'2015-03-15'
,'2015-03-16'
,'2015-03-17'
,'2015-03-18'
,'2015-03-19'
,'2015-03-20'
,'2015-03-21'
,'2015-03-22'
,'2015-03-23'
,'2015-03-24'
,'2015-03-25'
,'2015-03-26'
,'2015-03-27'
,'2015-03-28'
,'2015-03-29'
,'2015-03-30'
,'2015-03-31'
,'2015-04-01'
,'2015-04-02'
,'2015-04-03'
,'2015-04-04'
,'2015-04-05'
,'2015-04-06'
,'2015-04-07'
,'2015-04-08'
,'2015-04-09'
,'2015-04-10'
,'2015-04-11'
,'2015-04-12'
,'2015-04-13'
,'2015-04-14'
,'2015-04-15'
,'2015-04-16'
,'2015-04-17'
,'2015-04-18'
,'2015-04-19'
,'2015-04-20'
,'2015-04-21'
,'2015-04-22'
,'2015-04-23'
,'2015-04-24'
,'2015-04-25'
,'2015-04-26'
,'2015-04-27'
,'2015-04-28'
,'2015-04-29'
,'2015-04-30'
,'2015-05-01'
,'2015-05-02'
,'2015-05-03'
,'2015-05-04'
,'2015-05-05'
,'2015-05-06'
,'2015-05-07'
,'2015-05-08'
,'2015-05-09'
,'2015-05-10'
,'2015-05-11'
,'2015-05-12'
,'2015-05-13'
,'2015-05-14'
,'2015-05-15'
,'2015-05-16'
,'2015-05-17'
,'2015-05-18'
,'2015-05-19'
,'2015-05-20'
,'2015-05-21'
,'2015-05-22'
,'2015-05-23'
,'2015-05-24'
,'2015-05-25'
,'2015-05-26'
,'2015-05-27'
,'2015-05-28'
,'2015-05-29'
,'2015-05-30'
,'2015-05-31'
,'2015-06-01'
,'2015-06-02'
,'2015-06-03'
,'2015-06-04'
,'2015-06-05'
,'2015-06-06'
,'2015-06-07'
,'2015-06-08'
,'2015-06-09'
,'2015-06-10'
,'2015-06-11'
,'2015-06-12'
,'2015-06-13'
,'2015-06-14'
,'2015-06-15'
,'2015-06-16'
,'2015-06-17'
,'2015-06-18'
,'2015-06-19'
,'2015-06-20'
,'2015-06-21'
,'2015-06-22'
,'2015-06-23'
,'2015-06-24'
,'2015-06-25'
,'2015-06-26'
,'2015-06-27'
,'2015-06-28'
,'2015-06-29'
,'2015-06-30'
,'2015-07-01'
,'2015-07-02'
,'2015-07-03'
,'2015-07-04'
,'2015-07-05'
,'2015-07-06'
,'2015-07-07'
,'2015-07-08'
,'2015-07-09'
,'2015-07-10'
,'2015-07-11'
,'2015-07-12'
,'2015-07-13'
,'2015-07-14'
,'2015-07-15'
,'2015-07-16'
,'2015-07-17'
,'2015-07-18'
,'2015-07-19'
,'2015-07-20'
,'2015-07-21'
,'2015-07-22'
,'2015-07-23'
,'2015-07-24'
,'2015-07-25'
,'2015-07-26'
,'2015-07-27'
,'2015-07-28'
,'2015-07-29'
,'2015-07-30'
,'2015-07-31'
,'2015-08-01'
,'2015-08-02'
,'2015-08-03'
,'2015-08-04'
,'2015-08-05'
,'2015-08-06'
,'2015-08-07'
,'2015-08-08'
,'2015-08-09'
,'2015-08-10'
,'2015-08-11'
,'2015-08-12'
,'2015-08-13'
,'2015-08-14'
,'2015-08-15'
,'2015-08-16'
,'2015-08-17'
,'2015-08-18'
,'2015-08-19'
,'2015-08-20'
,'2015-08-21'
,'2015-08-22'
,'2015-08-23'
,'2015-08-24'
,'2015-08-25'
,'2015-08-26'
,'2015-08-27'
,'2015-08-28'
,'2015-08-29'
,'2015-08-30'
,'2015-08-31'
,'2015-09-01'
,'2015-09-02'
,'2015-09-03'
,'2015-09-04'
,'2015-09-05'
,'2015-09-06'
,'2015-09-07'
,'2015-09-08'
,'2015-09-09'
,'2015-09-10'
,'2015-09-11'
,'2015-09-12'
,'2015-09-13'
,'2015-09-14'
,'2015-09-15'
,'2015-09-16'
,'2015-09-17'
,'2015-09-18'
,'2015-09-19'
,'2015-09-20'
,'2015-09-21'
,'2015-09-22'
,'2015-09-23'
,'2015-09-24'
,'2015-09-25'
,'2015-09-26'
,'2015-09-27'
,'2015-09-28'
,'2015-09-29'
,'2015-09-30'
,'2015-10-01'
,'2015-10-02'
,'2015-10-03'
,'2015-10-04'
,'2015-10-05'
,'2015-10-06'
,'2015-10-07'
,'2015-10-08'
,'2015-10-09'
,'2015-10-10'
,'2015-10-11'
,'2015-10-12'
,'2015-10-13'
,'2015-10-14'
,'2015-10-15'
,'2015-10-16'
,'2015-10-17'
,'2015-10-18'
,'2015-10-19'
,'2015-10-20'
,'2015-10-21'
,'2015-10-22'
,'2015-10-23'
,'2015-10-24'
,'2015-10-25'
,'2015-10-26'
,'2015-10-27'
,'2015-10-28'
,'2015-10-29'
,'2015-10-30'
,'2015-10-31'
,'2015-11-01'
,'2015-11-02'
,'2015-11-03'
,'2015-11-04'
,'2015-11-05'
,'2015-11-06'
,'2015-11-07'
,'2015-11-08'
,'2015-11-09'
,'2015-11-10'
,'2015-11-11'
,'2015-11-12'
,'2015-11-13'
,'2015-11-14'
,'2015-11-15'
,'2015-11-16'
,'2015-11-17'
,'2015-11-18'
,'2015-11-19'
,'2015-11-20'
,'2015-11-21'
,'2015-11-22'
,'2015-11-23'
,'2015-11-24'
,'2015-11-25'
,'2015-11-26'
,'2015-11-27'
,'2015-11-28'
,'2015-11-29'
,'2015-11-30'
,'2015-12-01'
,'2015-12-02'
,'2015-12-03'
,'2015-12-04'
,'2015-12-05'
,'2015-12-06'
,'2015-12-07'
,'2015-12-08'
,'2015-12-09'
,'2015-12-10'
,'2015-12-11'
,'2015-12-12'
,'2015-12-13'
,'2015-12-14'
,'2015-12-15'
,'2015-12-16'
,'2015-12-17'
,'2015-12-18'
,'2015-12-19'
,'2015-12-20'
,'2015-12-21'
,'2015-12-22'
,'2015-12-23'
,'2015-12-24'
,'2015-12-25'
,'2015-12-26'
,'2015-12-27'
,'2015-12-28'
,'2015-12-29'
,'2015-12-30'
,'2015-12-31']

# for date in date_list_2016:
#     start = dt.datetime.now()
#     try:
#         url = "https://api.fixer.io/" + date
#         response = requests.get(url)
#
#         latest_fx = response.json()
#         last_years_euro_fx[latest_fx['date']] = latest_fx['rates']
#         print(url + " completed in " + str(dt.datetime.now() - start))
#     except:
#         print(url + " produced an error.")
#
# print(last_years_euro_fx)
#
# data = pd.DataFrame(last_years_euro_fx)
#
# data.to_csv("2016_euro_fx.csv")

### GENDER API ###

# name = "ashley"
#
# url_part = "https://api.genderize.io/?name="
# url_full = url_part + name
#
# response = requests.get(url_full)
#
# json_object = response.json()
#
# print(json_object)

### CRYPTO API ###
# cryp_keys = ['$$$', '1337', '2give', '42', '611', '808', '888', '8bit', 'abj', 'abn', 'aby', 'ac', 'acc', 'aces', 'acn', 'acoin', 'acp', 'act', 'ada', 'adc', 'adcn', 'adk', 'adz', 'aeon', 'aerm', 'aglc', 'aib', 'aky', 'all', 'alqo', 'altc', 'altcom', 'amber', 'ammo', 'ams', 'anc', 'ani', 'anti', 'antx', 'apc', 'apw', 'arb', 'arc', 'arco', 'ardr', 'arg', 'argus', 'ari', 'ark', 'asafe2', 'asn', 'atb', 'atmc', 'atms', 'atom', 'atx', 'au', 'aur', 'av', 'axiom', 'b2x', 'bac', 'bash', 'bay', 'bbp', 'bbr', 'bca', 'bcc', 'bcd', 'bcf', 'bch', 'bcn', 'bco', 'bcx', 'bdl', 'bela', 'benji', 'bern', 'best', 'bet', 'bigup', 'biob', 'bios', 'bip', 'birds', 'bis', 'bit', 'bitb', 'bitok', 'bits', 'bitz', 'blas', 'blazr', 'blc', 'blitz', 'blk', 'block', 'blry', 'blt', 'blu', 'bnx', 'boat', 'boli', 'bos', 'bpl', 'brain', 'bria', 'brit', 'brk', 'bro', 'brx', 'bsc', 'bsd', 'bsn', 'bsr', 'bstar', 'bsty', 'bt2', 'bta', 'btb', 'btbc', 'btc', 'btcd', 'btcr', 'btcs', 'btcz', 'btdx', 'btg', 'btm', 'btpl', 'btq', 'bts', 'btw', 'btx', 'bub', 'bucks', 'bumba', 'bun', 'burst', 'buzz', 'bvc', 'bwk', 'bxc', 'bxt', 'byc', 'c2', 'cab', 'cach', 'calc', 'cann', 'carbon', 'cash', 'cat', 'cbd', 'cbx', 'cc', 'ccn', 'ccrb', 'cdn', 'cesc', 'cf', 'chan', 'chc', 'cheap', 'chess', 'chips', 'cj', 'clam', 'cloak', 'club', 'cme', 'cmp', 'cmpco', 'cmt', 'cnnc', 'cno', 'cnt', 'cnx', 'coal', 'colx', 'con', 'conx', 'coupe', 'cpc', 'cpn', 'crave', 'crc', 'crdnc', 'crea', 'creva', 'crm', 'crt', 'crw', 'crx', 'csc', 'ctic2', 'cto', 'cube', 'cure', 'cv2', 'cwxt', 'cxt', 'cyc', 'cyder', 'cyp', 'dash', 'dashs', 'dav', 'daxx', 'dbg', 'dbix', 'dbtc', 'dcr', 'dcre', 'dct', 'dcy', 'dem', 'des', 'deus', 'dfs', 'dft', 'dgb', 'dgc', 'dgcs', 'dime', 'disk', 'dlc', 'dlisk', 'dmb', 'dmc', 'dmd', 'dnr', 'doge', 'dollar', 'don', 'dope', 'dot', 'dp', 'drm', 'drs', 'drxne', 'dsh', 'dsr', 'dub', 'duo', 'dutch', 'dyn', 'eac', 'eag', 'ebst', 'ebt', 'eca', 'ecc', 'ecn', 'eco', 'edr', 'edrc', 'efl', 'egc', 'egg', 'ego', 'el', 'ela', 'elc', 'ele', 'ella', 'els', 'emc', 'emc2', 'emd', 'enrg', 'ent', 'eqt', 'erc', 'ery', 'esp', 'etc', 'eth', 'ethd', 'etn', 'etp', 'euc', 'evil', 'evo', 'excl', 'exp', 'fair', 'fazz', 'fc2', 'fcn', 'fct', 'ffc', 'fid', 'fil', 'fimk', 'fire', 'fjc', 'flap', 'flash', 'flax', 'flo', 'flt', 'flvr', 'fly', 'fnc', 'fonz', 'for', 'frc', 'frgc', 'frk', 'frn', 'frst', 'frwc', 'fst', 'ftc', 'futc', 'fuzz', 'g3n', 'gaia', 'gain', 'gam', 'game', 'gap', 'gay', 'gb', 'gbc', 'gbg', 'gbt', 'gbx', 'gbyte', 'gcc', 'gcn', 'gcr', 'gdc', 'geert', 'glc', 'gld', 'gls', 'glt', 'gml', 'gmx', 'god', 'golf', 'golos', 'gp', 'gpl', 'gpu', 'grc', 'gre', 'grim', 'grlc', 'grn', 'grs', 'grwi', 'gsr', 'gtc', 'gun', 'gxs', 'hal', 'hallo', 'hbc', 'hbn', 'hc', 'hcc', 'heat', 'high', 'hmc', 'hmp', 'hnc', 'hodl', 'hold', 'honey', 'hpc', 'hsr', 'ht', 'htc', 'html', 'html5', 'huc', 'hush', 'hvco', 'hwc', 'hxx', 'hyp', 'hyper', 'i0c', 'ibank', 'ic', 'icn', 'icob', 'icon', 'ifc', 'iflt', 'imps', 'ims', 'imx', 'india', 'inf', 'infx', 'inn', 'insn', 'ioc', 'ion', 'iop', 'irl', 'isl', 'iti', 'itns', 'ivz', 'ixc', 'j', 'jin', 'jiyo', 'jobs', 'jwl', 'karma', 'kashh', 'kayi', 'kb3', 'ked', 'kek', 'klc', 'kmd', 'knc', 'kobo', 'kore', 'krb', 'krone', 'kurt', 'kush', 'kzc', 'lana', 'laz', 'lbc', 'lbtc', 'lcp', 'ldcn', 'ldoge', 'lea', 'leo', 'lepen', 'linda', 'linx', 'lir', 'lkc', 'lkk', 'lmc', 'log', 'lsk', 'ltb', 'ltc', 'ltcr', 'ltcu', 'lth', 'luna', 'lux', 'lvps', 'mac', 'mad', 'mag', 'mage', 'magn', 'mao', 'mar', 'mars', 'marx', 'max', 'may', 'mbl', 'mcrn', 'mdc', 'mec', 'meme', 'men', 'metal', 'mgc', 'mgm', 'milo', 'mint', 'miota', 'mmxvi', 'mnc', 'mnd', 'mnm', 'mnx', 'moin', 'mojo', 'mona', 'moneta', 'money', 'monk', 'moon', 'moto', 'mscn', 'msd', 'mst', 'mtlmc3', 'mtnc', 'mue', 'music', 'mxt', 'mzc', 'namo', 'nanox', 'nav', 'nbit', 'nebl', 'neo', 'neos', 'net', 'netko', 'neva', 'nka', 'nlc2', 'nlg', 'nmc', 'nobl', 'nodc', 'note', 'nro', 'ntrn', 'nuko', 'nvc', 'nxs', 'nxt', 'nyan', 'nyc', 'odn', 'of', 'off', 'ok', 'omc', 'omni', 'onion', 'onx', 'op', 'opal', 'opc', 'opes', 'orb', 'ore', 'orly', 'os76', 'oxy', 'p7c', 'pac', 'pak', 'part', 'pasc', 'payp', 'pcn', 'pcoin', 'pcs', 'pdg', 'pec', 'pex', 'pho', 'phr', 'phs', 'pie', 'piggy', 'pink', 'pirl', 'pivx', 'pizza', 'pkb', 'placo', 'plnc', 'pnd', 'pnx', 'poke', 'polis', 'ponzi', 'pop', 'post', 'posw', 'pot', 'ppc', 'ppy', 'pr', 'prc', 'primu', 'prm', 'prn', 'proc', 'prx', 'psy', 'ptc', 'pulse', 'pura', 'pure', 'put', 'px', 'pxc', 'pxi', 'pzm', 'q2c', 'qbc', 'qbic', 'qbt', 'qcn', 'qora', 'qrk', 'qtl', 'qtum', 'rads', 'rain', 'rbbt', 'rbies', 'rbt', 'rby', 'rc', 'rcn', 'rdd', 'rec', 'red', 'ree', 'rega', 'rhfc', 'ric', 'richx', 'ride', 'rise', 'rmc', 'rns', 'roofs', 'royal', 'rpc', 'rsgp', 'rubit', 'runners', 'rup', 'rupx', 'sac', 'saga', 'sak', 'sandg', 'sbc', 'sbd', 'sbtc', 'sc', 'score', 'scrt', 'scs', 'sdc', 'sdp', 'send', 'seq', 'sfc', 'sfe', 'sh', 'sha', 'shell', 'shift', 'shnd', 'shorty', 'sib', 'sic', 'sigma', 'sigt', 'skc', 'skr', 'skull', 'sky', 'slevin', 'slfi', 'slg', 'sling', 'slr', 'sls', 'smart', 'smc', 'smly', 'snrg', 'socc', 'soil', 'soj', 'song', 'soon', 'space', 'spex', 'sphr', 'spk', 'sport', 'spr', 'sprts', 'spt', 'src', 'stak', 'stars', 'start', 'steem', 'steps', 'stn', 'strat', 'sts', 'stv', 'sumo', 'super', 'swing', 'sxc', 'synx', 'sys', 'tag', 'tagr', 'taj', 'talk', 'tcc', 'tcoin', 'tcr', 'team', 'tek', 'tell', 'ter', 'tera', 'tes', 'tgc', 'thc', 'ths', 'tips', 'tit', 'tle', 'toa', 'today', 'tok', 'tokc', 'top', 'topaz', 'tor', 'trc', 'trf', 'tri', 'trick', 'trk', 'troll', 'trump', 'trust', 'tse', 'tstr', 'ttc', 'turbo', 'tx', 'tycho', 'tzc', 'ubq', 'ubtc', 'ufo', 'uis', 'ula', 'unb', 'unc', 'uni', 'unic', 'unify', 'unit', 'units', 'uno', 'unrc', 'ur', 'urc', 'uro', 'usc', 'usnbt', 'uta', 'utc', 'v', 'val', 'vash', 'vc', 'vec2', 'via', 'vidz', 'vip', 'visio', 'vivo', 'vlt', 'vltc', 'volt', 'vot', 'vox', 'voya', 'vprc', 'vrc', 'vrm', 'vsx', 'vta', 'vtc', 'vtr', 'vuc', 'vulc', 'wa', 'warp', 'waves', 'way', 'wbb', 'wc', 'wdc', 'whl', 'wink', 'wmc', 'women', 'worm', 'wow', 'wsx', 'x2', 'xas', 'xau', 'xbc', 'xbtc21', 'xbts', 'xby', 'xcn', 'xco', 'xcp', 'xcpo', 'xcre', 'xcs', 'xct', 'xcxt', 'xde2', 'xdn', 'xel', 'xem', 'xft', 'xgox', 'xgr', 'xhi', 'xid', 'xin', 'xios', 'xjo', 'xlc', 'xlm', 'xlr', 'xmcc', 'xmg', 'xmr', 'xmy', 'xng', 'xoc', 'xp', 'xpd', 'xpm', 'xptx', 'xpy', 'xqn', 'xra', 'xrb', 'xrc', 'xre', 'xrp', 'xry', 'xsh', 'xspec', 'xst', 'xstc', 'xtd', 'xto', 'xtz', 'xvc', 'xve', 'xvg', 'xvp', 'xwc', 'xzc', 'yac', 'yash', 'yes', 'yoc', 'ytn', 'zbc', 'zcl', 'zec', 'zeit', 'zen', 'zeni', 'zeph', 'zer', 'zet', 'zmc', 'zne', 'zny', 'zoi', 'zse', 'zur', 'zyd', 'zzc']
#
# url_part_1 = "https://coinbin.org/zoi/history"
# url_part_3 = "/history"
# url_full = url1 +  + url2
#
# response = requests.get(url)
#
# json_object = response.json()
#
# print(json_object)

# for coin in cryp_keys:

# for coin in cryp_keys:
#     try:
#         output_path = "cryp\\" + coin + ".csv"
#
#         #create url
#
#         url_part_1 = "https://coinbin.org/"
#         url_part_3 = "/history"
#         url_part_2 = coin
#
#         start = dt.datetime.now()
#
#         url_full = url_part_1 + url_part_2 + url_part_3
#
#         #call
#         response = requests.get(url_full)
#
#         #store in json
#         response_json = response.json()
#
#         #store in dictionary
#         object_dictionary = response_json["history"]
#
#         #store in dataframe
#         data = pd.DataFrame(object_dictionary)
#
#         #save dataframe as csv
#         data.to_csv(output_path, index_label = "row_index")
#
#         #print time taken
#         print(coin + " pulled and exported in " +str(dt.datetime.now() - start))
#
#     except:
#         print(coin + " has failed.")

### STUDIO GHIBLI ###



url = "http://jservice.io/api/categories"

response = requests.get(url)

json = response.json()

print(json)



